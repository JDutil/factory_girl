require "spec_helper"
require "acceptance/acceptance_helper"

describe "an instance generated by a factory with multiple parents" do
  before do
    define_model("User", :name => :string, :admin => :boolean, :gender => :string)

    FactoryGirl.define do
      factory :user do
        name "John"

        factory :admin do
          admin true
        end

        factory :male do
          gender "Male"
        end

        factory :female do
          name   "Jane"
          gender "Female"
        end

        factory :female_admin, :parents => [:female, :admin]
        factory :female_after_male_admin, :parents => [:male, :female, :admin]
        factory :male_after_female_admin, :parents => [:female, :male, :admin]
      end
    end
  end

  context "the parent class" do
    subject      { FactoryGirl.create(:user) }
    its(:name)   { should == "John" }
    its(:gender) { should be_nil }
    it { should_not be_admin }
  end

  context "the child class" do
    subject      { FactoryGirl.create(:admin) }
    its(:name)   { should == "John" }
    its(:gender) { should be_nil }
    it { should be_admin }
  end

  context "the other child class" do
    subject      { FactoryGirl.create(:female) }
    its(:name)   { should == "Jane" }
    its(:gender) { should == "Female" }
    it { should_not be_admin }
  end

  context "the child with multiple parents" do
    subject      { FactoryGirl.create(:female_admin) }
    its(:name)   { should == "Jane" }
    its(:gender) { should == "Female" }
    it { should be_admin }
  end

  context "the child with multiple parents and overridden attributes" do
    subject      { FactoryGirl.create(:female_admin, :name => "Jill", :gender => nil) }
    its(:name)   { should == "Jill" }
    its(:gender) { should be_nil }
    it { should be_admin }
  end

  context "the child with multiple parents who override the same attribute" do
    context "when the male assigns name after female" do
      subject      { FactoryGirl.create(:male_after_female_admin) }

      its(:name)   { should == "John" }
      its(:gender) { should == "Male" }
      it { should be_admin }
    end

    context "when the female assigns name after male" do
      subject      { FactoryGirl.create(:female_after_male_admin) }

      its(:name)   { should == "Jane" }
      its(:gender) { should == "Female" }
      it { should be_admin }
    end
  end
end
